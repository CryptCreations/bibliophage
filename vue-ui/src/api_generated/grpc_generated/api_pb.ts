// @generated by protoc-gen-es v2.10.0 with parameter "target=ts"
// @generated from file grpc_generated/api.proto (package bibliophage, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file grpc_generated/api.proto.
 */
export const file_grpc_generated_api: GenFile = /*@__PURE__*/
  fileDesc("ChhncnBjX2dlbmVyYXRlZC9hcGkucHJvdG8SC2JpYmxpb3BoYWdlIoUCCg5QZGZMb2FkUmVxdWVzdBIXCg9wZGZfb3JpZ2luX3BhdGgYASABKAkSEAoIcGRmX25hbWUYAiABKAkSKgoKcGRmX3N5c3RlbRgDIAEoDjIWLmJpYmxpb3BoYWdlLlJwZ1N5c3RlbRIuCghwZGZfdHlwZRgEIAEoDjIcLmJpYmxpb3BoYWdlLlB1YmxpY2F0aW9uVHlwZRIWCg5wZGZfcGFnZV9jb3VudBgFIAEoBRIXCgpjaHVua19zaXplGAYgASgFSACIAQESGgoNY2h1bmtfb3ZlcmxhcBgHIAEoBUgBiAEBQg0KC19jaHVua19zaXplQhAKDl9jaHVua19vdmVybGFwInAKFERvY3VtZW50U3RvcmVSZXF1ZXN0EhUKDWRvY3VtZW50X25hbWUYASABKAkSDwoHY29udGVudBgCIAEoCRIwCg1kb2N1bWVudF90eXBlGAQgASgOMhkuYmlibGlvcGhhZ2UuRG9jdW1lbnRUeXBlImAKD1BkZkxvYWRSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkSFgoOY2h1bmtzX2NyZWF0ZWQYAyABKAUSEwoLZG9jdW1lbnRfaWQYBCABKAkiOQoVRG9jdW1lbnRTdG9yZVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSpZCglScGdTeXN0ZW0SGgoWUlBHX1NZU1RFTV9VTlNQRUNJRklFRBAAEgoKBkRORF8zNRABEhEKDVBBVEhGSU5ERVJfMUUQAhIRCg1QQVRIRklOREVSXzJFEAMqgAEKD1B1YmxpY2F0aW9uVHlwZRIgChxQVUJMSUNBVElPTl9UWVBFX1VOU1BFQ0lGSUVEEAASEQoNQ09SRV9SVUxFQk9PSxABEgwKCEJFU1RJQVJZEAISDgoKU1VQUExFTUVOVBADEg0KCUFEVkVOVFVSRRAEEgsKB1NFVFRJTkcQBSpzCgxEb2N1bWVudFR5cGUSHQoZRE9DVU1FTlRfVFlQRV9VTlNQRUNJRklFRBAAEggKBE5PVEUQARIRCg1MT1JFX0ZSQUdNRU5UEAISDQoJQ0hBUkFDVEVSEAMSDAoITE9DQVRJT04QBBIKCgZPQkpFQ1QQBTJWCg5Mb2FkaW5nU2VydmljZRJECgdMb2FkUERGEhsuYmlibGlvcGhhZ2UuUGRmTG9hZFJlcXVlc3QaHC5iaWJsaW9waGFnZS5QZGZMb2FkUmVzcG9uc2UyaQoPRG9jdW1lbnRTZXJ2aWNlElYKDVN0b3JlRG9jdW1lbnQSIS5iaWJsaW9waGFnZS5Eb2N1bWVudFN0b3JlUmVxdWVzdBoiLmJpYmxpb3BoYWdlLkRvY3VtZW50U3RvcmVSZXNwb25zZWIGcHJvdG8z");

/**
 * Request messages - what the client sends
 *
 * @generated from message bibliophage.PdfLoadRequest
 */
export type PdfLoadRequest = Message<"bibliophage.PdfLoadRequest"> & {
  /**
   * Filesystem path to the PDF
   *
   * @generated from field: string pdf_origin_path = 1;
   */
  pdfOriginPath: string;

  /**
   * Human-readable name (e.g., "Monster Manual")
   *
   * @generated from field: string pdf_name = 2;
   */
  pdfName: string;

  /**
   * Which RPG system
   *
   * @generated from field: bibliophage.RpgSystem pdf_system = 3;
   */
  pdfSystem: RpgSystem;

  /**
   * Type of publication
   *
   * @generated from field: bibliophage.PublicationType pdf_type = 4;
   */
  pdfType: PublicationType;

  /**
   * Number of pages (optional, can be 0)
   *
   * @generated from field: int32 pdf_page_count = 5;
   */
  pdfPageCount: number;

  /**
   * Chunking parameters
   *
   * Size of text chunks (default: 600)
   *
   * @generated from field: optional int32 chunk_size = 6;
   */
  chunkSize?: number;

  /**
   * Overlap between chunks (default: 50)
   *
   * @generated from field: optional int32 chunk_overlap = 7;
   */
  chunkOverlap?: number;
};

/**
 * Describes the message bibliophage.PdfLoadRequest.
 * Use `create(PdfLoadRequestSchema)` to create a new message.
 */
export const PdfLoadRequestSchema: GenMessage<PdfLoadRequest> = /*@__PURE__*/
  messageDesc(file_grpc_generated_api, 0);

/**
 * @generated from message bibliophage.DocumentStoreRequest
 */
export type DocumentStoreRequest = Message<"bibliophage.DocumentStoreRequest"> & {
  /**
   * Human-readable name (e.g., "Monster Manual")
   *
   * @generated from field: string document_name = 1;
   */
  documentName: string;

  /**
   * raw text content of the document
   *
   * @generated from field: string content = 2;
   */
  content: string;

  /**
   * Type of document
   *
   * @generated from field: bibliophage.DocumentType document_type = 4;
   */
  documentType: DocumentType;
};

/**
 * Describes the message bibliophage.DocumentStoreRequest.
 * Use `create(DocumentStoreRequestSchema)` to create a new message.
 */
export const DocumentStoreRequestSchema: GenMessage<DocumentStoreRequest> = /*@__PURE__*/
  messageDesc(file_grpc_generated_api, 1);

/**
 * Response messages - what the server sends back
 *
 * @generated from message bibliophage.PdfLoadResponse
 */
export type PdfLoadResponse = Message<"bibliophage.PdfLoadResponse"> & {
  /**
   * Did it work?
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Human-readable status/error message
   *
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * How many chunks were stored
   *
   * @generated from field: int32 chunks_created = 3;
   */
  chunksCreated: number;

  /**
   * Unique ID for this ingested document
   *
   * @generated from field: string document_id = 4;
   */
  documentId: string;
};

/**
 * Describes the message bibliophage.PdfLoadResponse.
 * Use `create(PdfLoadResponseSchema)` to create a new message.
 */
export const PdfLoadResponseSchema: GenMessage<PdfLoadResponse> = /*@__PURE__*/
  messageDesc(file_grpc_generated_api, 2);

/**
 * @generated from message bibliophage.DocumentStoreResponse
 */
export type DocumentStoreResponse = Message<"bibliophage.DocumentStoreResponse"> & {
  /**
   * Did it work?
   *
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * Human-readable status/error message
   *
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message bibliophage.DocumentStoreResponse.
 * Use `create(DocumentStoreResponseSchema)` to create a new message.
 */
export const DocumentStoreResponseSchema: GenMessage<DocumentStoreResponse> = /*@__PURE__*/
  messageDesc(file_grpc_generated_api, 3);

/**
 * enums for strict classification of data, 
 * rather than freeform JSON/strings 
 *
 * @generated from enum bibliophage.RpgSystem
 */
export enum RpgSystem {
  /**
   * Default/unknown (proto3 requires 0)
   *
   * @generated from enum value: RPG_SYSTEM_UNSPECIFIED = 0;
   */
  RPG_SYSTEM_UNSPECIFIED = 0,

  /**
   * D&D 3.5 Edition
   *
   * @generated from enum value: DND_35 = 1;
   */
  DND_35 = 1,

  /**
   * Pathfinder 1st Edition
   *
   * @generated from enum value: PATHFINDER_1E = 2;
   */
  PATHFINDER_1E = 2,

  /**
   * Pathfinder 2nd Edition
   *
   * @generated from enum value: PATHFINDER_2E = 3;
   */
  PATHFINDER_2E = 3,
}

/**
 * Describes the enum bibliophage.RpgSystem.
 */
export const RpgSystemSchema: GenEnum<RpgSystem> = /*@__PURE__*/
  enumDesc(file_grpc_generated_api, 0);

/**
 * @generated from enum bibliophage.PublicationType
 */
export enum PublicationType {
  /**
   * Default/unknown
   *
   * @generated from enum value: PUBLICATION_TYPE_UNSPECIFIED = 0;
   */
  PUBLICATION_TYPE_UNSPECIFIED = 0,

  /**
   * Core rules (PHB, DMG, etc.)
   *
   * @generated from enum value: CORE_RULEBOOK = 1;
   */
  CORE_RULEBOOK = 1,

  /**
   * Monster books
   *
   * @generated from enum value: BESTIARY = 2;
   */
  BESTIARY = 2,

  /**
   * Additional rules/options
   *
   * @generated from enum value: SUPPLEMENT = 3;
   */
  SUPPLEMENT = 3,

  /**
   * Adventure modules/paths
   *
   * @generated from enum value: ADVENTURE = 4;
   */
  ADVENTURE = 4,

  /**
   * Campaign setting books
   *
   * @generated from enum value: SETTING = 5;
   */
  SETTING = 5,
}

/**
 * Describes the enum bibliophage.PublicationType.
 */
export const PublicationTypeSchema: GenEnum<PublicationType> = /*@__PURE__*/
  enumDesc(file_grpc_generated_api, 1);

/**
 * @generated from enum bibliophage.DocumentType
 */
export enum DocumentType {
  /**
   * Default/unknown
   *
   * @generated from enum value: DOCUMENT_TYPE_UNSPECIFIED = 0;
   */
  DOCUMENT_TYPE_UNSPECIFIED = 0,

  /**
   * Least specific, unspecified documents will be turned into this
   *
   * @generated from enum value: NOTE = 1;
   */
  NOTE = 1,

  /**
   * Has some authoritative information
   *
   * @generated from enum value: LORE_FRAGMENT = 2;
   */
  LORE_FRAGMENT = 2,

  /**
   * PCs, NPCs, historical figures, ...
   *
   * @generated from enum value: CHARACTER = 3;
   */
  CHARACTER = 3,

  /**
   * Places
   *
   * @generated from enum value: LOCATION = 4;
   */
  LOCATION = 4,

  /**
   * Posessions, Items, Objects, ...
   *
   * @generated from enum value: OBJECT = 5;
   */
  OBJECT = 5,
}

/**
 * Describes the enum bibliophage.DocumentType.
 */
export const DocumentTypeSchema: GenEnum<DocumentType> = /*@__PURE__*/
  enumDesc(file_grpc_generated_api, 2);

/**
 * Service definitions - the API endpoints
 * RPC method: takes Request, returns Response
 *
 * @generated from service bibliophage.LoadingService
 */
export const LoadingService: GenService<{
  /**
   * @generated from rpc bibliophage.LoadingService.LoadPDF
   */
  loadPDF: {
    methodKind: "unary";
    input: typeof PdfLoadRequestSchema;
    output: typeof PdfLoadResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_grpc_generated_api, 0);

/**
 * @generated from service bibliophage.DocumentService
 */
export const DocumentService: GenService<{
  /**
   * @generated from rpc bibliophage.DocumentService.StoreDocument
   */
  storeDocument: {
    methodKind: "unary";
    input: typeof DocumentStoreRequestSchema;
    output: typeof DocumentStoreResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_grpc_generated_api, 1);

